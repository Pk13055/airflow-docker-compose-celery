version: '3.7'
services:
    nginx:
        image: nginx:latest 
        ports:
           - 80:80
        volumes:
           - ./config/nginx/:/etc/nginx/conf.d/
        networks:
           - web_network
        depends_on:
           - webserver
           - rabbit
           - flower

    webserver:
        build: .
        hostname: webserver
        command: webserver
        restart: always
        depends_on:
            - rabbit
        environment:
            - EXECUTOR=$EXECUTOR
            - AIRFLOW__CELERY__BROKER_URL=$AIRFLOW__CELERY__BROKER_URL
            - POSTGRES_USER=$POSTGRES_USER
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            - POSTGRES_HOST=$POSTGRES_HOST
            - POSTGRES_PORT=$POSTGRES_PORT
            - POSTGRES_DB=$POSTGRES_DB
            - POSTGRES_EXTRAS=$POSTGRES_EXTRAS
        volumes:
            - ./dags:/usr/local/airflow/dags
        networks:
            - task_network
            - web_network
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-webserver.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    scheduler:
        build: .
        command: scheduler
        restart: always
        depends_on:
            - webserver
            - worker_i
        networks:
            - task_network
        volumes:
            - ./dags:/usr/local/airflow/dags
        environment:
            - EXECUTOR=$EXECUTOR
            - AIRFLOW__CELERY__BROKER_URL=$AIRFLOW__CELERY__BROKER_URL
            - POSTGRES_USER=$POSTGRES_USER
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            - POSTGRES_HOST=$POSTGRES_HOST
            - POSTGRES_PORT=$POSTGRES_PORT
            - POSTGRES_DB=$POSTGRES_DB
            - POSTGRES_EXTRAS=$POSTGRES_EXTRAS

    rabbit:
        image: rabbitmq:3-management
        restart: always
        hostname: rabbit
        environment:
            - RABBITMQ_DEFAULT_USER=$RABBIT_USER
            - RABBITMQ_DEFAULT_PASSWORD=$RABBIT_PASS
        volumes:
            - rabbit-data:/var/lib/rabbitmq/mnesia/
        networks:
            - task_network
            - web_network

    flower:
        build: .
        hostname: flower
        command: flower --url_prefix=flower --basic_auth=$FLOWER_USER:$FLOWER_PASS
        restart: always
        depends_on:
            - rabbit
        environment:
            - EXECUTOR=$EXECUTOR
            - AIRFLOW__CELERY__BROKER_URL=$AIRFLOW__CELERY__BROKER_URL
            - POSTGRES_USER=$POSTGRES_USER
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            - POSTGRES_HOST=$POSTGRES_HOST
            - POSTGRES_PORT=$POSTGRES_PORT
            - POSTGRES_DB=$POSTGRES_DB
            - POSTGRES_EXTRAS=$POSTGRES_EXTRAS
        networks:
            - task_network
            - web_network
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-flower.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

    worker_i:
        build: .
        hostname: worker_i
        command: worker -cn worker_i
        restart: always
        depends_on:
            - rabbit
        volumes:
            - ./dags:/usr/local/airflow/dags
        networks:
            - task_network
        environment:
            - EXECUTOR=$EXECUTOR
            - AIRFLOW__CELERY__BROKER_URL=$AIRFLOW__CELERY__BROKER_URL
            - POSTGRES_USER=$POSTGRES_USER
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
            - POSTGRES_HOST=$POSTGRES_HOST
            - POSTGRES_PORT=$POSTGRES_PORT
            - POSTGRES_DB=$POSTGRES_DB
            - POSTGRES_EXTRAS=$POSTGRES_EXTRAS
        healthcheck:
            test: ["CMD-SHELL", "[ -f /usr/local/airflow/airflow-worker.pid ]"]
            interval: 30s
            timeout: 30s
            retries: 3

networks:
    task_network:
        driver: bridge
    web_network:
        driver: bridge

volumes:
    rabbit-data:
